{
  "openapi": "3.0.1",
  "info": {
    "title": "CleanIAM",
    "description": "CleanIAM API",
    "version": "v1"
  },
  "paths": {
    "/api/applications": {
      "get": {
        "tags": [
          "ApplicationsApi"
        ],
        "summary": "Show the main application page with a list of all applications.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiApplicationModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiApplicationModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiApplicationModel"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApplicationsApi"
        ],
        "summary": "Create new application",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "description": "Gets or sets the id associated with the application.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "ApplicationType",
            "in": "query",
            "description": "Gets or sets the application type associated with the application.",
            "schema": {
              "$ref": "#/components/schemas/ApplicationType"
            }
          },
          {
            "name": "ClientId",
            "in": "query",
            "description": "Gets or sets the client identifier associated with the application.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ClientType",
            "in": "query",
            "description": "Gets or sets the client type associated with the application.",
            "schema": {
              "$ref": "#/components/schemas/ClientType"
            }
          },
          {
            "name": "ConsentType",
            "in": "query",
            "description": "Gets or sets the consent type associated with the application.",
            "schema": {
              "$ref": "#/components/schemas/ConsentType"
            }
          },
          {
            "name": "DisplayName",
            "in": "query",
            "description": "Gets or sets the display name associated with the application.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Scopes",
            "in": "query",
            "description": "Allowed scopes for the application.",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Endpoints",
            "in": "query",
            "description": "Allowed endpoints for the application.",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "GrantTypes",
            "in": "query",
            "description": "Allowed grant types for the application.",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ResponseTypes",
            "in": "query",
            "description": "Allowed response types for the application.",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "PostLogoutRedirectUris",
            "in": "query",
            "description": "Gets the post-logout redirect URIs associated with the application.",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          {
            "name": "RedirectUris",
            "in": "query",
            "description": "Gets the redirect URIs associated with the application.",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          {
            "name": "Requirements",
            "in": "query",
            "description": "Gets the requirements associated with the application.",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OpenIdApplicationCreated"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenIdApplicationCreated"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenIdApplicationCreated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/applications/{id}": {
      "get": {
        "tags": [
          "ApplicationsApi"
        ],
        "summary": "Get the application with the given id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the application",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OpenIdApplication"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenIdApplication"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenIdApplication"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApplicationsApi"
        ],
        "summary": "Update the application with the given id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the application to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Data of the updated application",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateApplicationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateApplicationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateApplicationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OpenIdApplicationUpdated"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenIdApplicationUpdated"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenIdApplicationUpdated"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApplicationsApi"
        ],
        "summary": "Update the application with the given id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the application to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OpenIdApplicationDeleted"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenIdApplicationDeleted"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenIdApplicationDeleted"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/test": {
      "get": {
        "tags": [
          "ApplicationsApi"
        ],
        "summary": "Test endpoint to check if the API is up and running.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "UsersApi"
        ],
        "summary": "Get all users",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiUserModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiUserModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiUserModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UsersApi"
        ],
        "summary": "Create new user",
        "parameters": [
          {
            "name": "Email",
            "in": "query",
            "description": "Email of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FirstName",
            "in": "query",
            "description": "First name of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LastName",
            "in": "query",
            "description": "last name of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Roles",
            "in": "query",
            "description": "User roles",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UserRole"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreated"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreated"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/id:guid": {
      "get": {
        "tags": [
          "UsersApi"
        ],
        "summary": "Get specific user by its id",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id of the user to get",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiUserModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiUserModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiUserModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "UsersApi"
        ],
        "summary": "Update user",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id of user to update",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Email",
            "in": "query",
            "description": "Email of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FirstName",
            "in": "query",
            "description": "First name of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LastName",
            "in": "query",
            "description": "last name of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Roles",
            "in": "query",
            "description": "User roles",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UserRole"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserUpdated"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserUpdated"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserUpdated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UsersApi"
        ],
        "summary": "Delete user",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id of user to be deleted",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserDeleted"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDeleted"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDeleted"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiApplicationModel": {
        "required": [
          "id",
          "applicationType",
          "clientId",
          "clientType",
          "consentType",
          "displayName",
          "scopes",
          "endpoints",
          "grantTypes",
          "responseTypes",
          "postLogoutRedirectUris",
          "redirectUris",
          "requirements"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the id associated with the application.",
            "format": "uuid"
          },
          "applicationType": {
            "$ref": "#/components/schemas/ApplicationType"
          },
          "clientId": {
            "type": "string",
            "description": "Gets or sets the client identifier associated with the application."
          },
          "clientType": {
            "$ref": "#/components/schemas/ClientType"
          },
          "consentType": {
            "$ref": "#/components/schemas/ConsentType"
          },
          "displayName": {
            "type": "string",
            "description": "Gets or sets the display name associated with the application.",
            "nullable": true
          },
          "scopes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Allowed scopes for the application."
          },
          "endpoints": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Allowed endpoints for the application."
          },
          "grantTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Allowed grant types for the application."
          },
          "responseTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Allowed response types for the application."
          },
          "postLogoutRedirectUris": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "Gets the post-logout redirect URIs associated with the application."
          },
          "redirectUris": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "Gets the redirect URIs associated with the application."
          },
          "requirements": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets the requirements associated with the application."
          }
        },
        "additionalProperties": false
      },
      "ApiUserModel": {
        "required": [
          "id",
          "email",
          "firstName",
          "lastName",
          "roles"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the user",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "description": "Email of the user"
          },
          "firstName": {
            "type": "string",
            "description": "First name of the user"
          },
          "lastName": {
            "type": "string",
            "description": "last name of the user"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRole"
            },
            "description": "User roles"
          }
        },
        "additionalProperties": false,
        "description": "Api user model"
      },
      "ApplicationType": {
        "enum": [
          "native",
          "web"
        ],
        "type": "string"
      },
      "ClientType": {
        "enum": [
          "public",
          "confidential"
        ],
        "type": "string"
      },
      "ConsentType": {
        "enum": [
          "explicit",
          "external",
          "implicit",
          "systematic"
        ],
        "type": "string"
      },
      "Error": {
        "required": [
          "message",
          "code"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OpenIdApplication": {
        "required": [
          "id",
          "applicationType",
          "clientId",
          "clientType",
          "consentType",
          "displayName",
          "scopes",
          "endpoints",
          "grantTypes",
          "responseTypes",
          "postLogoutRedirectUris",
          "properties",
          "redirectUris"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the id associated with the application.",
            "format": "uuid"
          },
          "applicationType": {
            "$ref": "#/components/schemas/ApplicationType"
          },
          "clientId": {
            "type": "string",
            "description": "Gets or sets the client identifier associated with the application."
          },
          "clientType": {
            "$ref": "#/components/schemas/ClientType"
          },
          "consentType": {
            "$ref": "#/components/schemas/ConsentType"
          },
          "displayName": {
            "type": "string",
            "description": "Gets or sets the display name associated with the application.",
            "nullable": true
          },
          "scopes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Allowed scopes for the application."
          },
          "endpoints": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Allowed endpoints for the application."
          },
          "grantTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Allowed grant types for the application."
          },
          "responseTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Allowed response types for the application."
          },
          "postLogoutRedirectUris": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "Gets the post-logout redirect URIs associated with the application."
          },
          "properties": {
            "type": "object",
            "additionalProperties": {},
            "description": "Gets the additional properties associated with the application."
          },
          "redirectUris": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "Gets the redirect URIs associated with the application."
          }
        },
        "additionalProperties": false
      },
      "OpenIdApplicationCreated": {
        "required": [
          "id",
          "applicationType",
          "clientId",
          "clientSecret",
          "clientType",
          "consentType",
          "displayName",
          "permissions",
          "postLogoutRedirectUris",
          "redirectUris",
          "requirements",
          "settings"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "applicationType": {
            "$ref": "#/components/schemas/ApplicationType"
          },
          "clientId": {
            "type": "string"
          },
          "clientSecret": {
            "type": "string",
            "nullable": true
          },
          "clientType": {
            "$ref": "#/components/schemas/ClientType"
          },
          "consentType": {
            "$ref": "#/components/schemas/ConsentType"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "postLogoutRedirectUris": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "redirectUris": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "requirements": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "settings": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "OpenIdApplicationDeleted": {
        "required": [
          "id",
          "displayName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "displayName": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "OpenIdApplicationUpdated": {
        "required": [
          "id",
          "applicationType",
          "clientId",
          "clientType",
          "consentType",
          "displayName",
          "permissions",
          "postLogoutRedirectUris",
          "redirectUris",
          "requirements",
          "settings"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "applicationType": {
            "$ref": "#/components/schemas/ApplicationType"
          },
          "clientId": {
            "type": "string"
          },
          "clientType": {
            "$ref": "#/components/schemas/ClientType"
          },
          "consentType": {
            "$ref": "#/components/schemas/ConsentType"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "postLogoutRedirectUris": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "redirectUris": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "requirements": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "settings": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "UpdateApplicationRequest": {
        "required": [
          "id",
          "applicationType",
          "clientId",
          "clientType",
          "consentType",
          "displayName",
          "scopes",
          "endpoints",
          "grantTypes",
          "responseTypes",
          "postLogoutRedirectUris",
          "redirectUris",
          "requirements"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the id associated with the application.",
            "format": "uuid"
          },
          "applicationType": {
            "$ref": "#/components/schemas/ApplicationType"
          },
          "clientId": {
            "type": "string",
            "description": "Gets or sets the client identifier associated with the application."
          },
          "clientType": {
            "$ref": "#/components/schemas/ClientType"
          },
          "consentType": {
            "$ref": "#/components/schemas/ConsentType"
          },
          "displayName": {
            "type": "string",
            "description": "Gets or sets the display name associated with the application.",
            "nullable": true
          },
          "scopes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Allowed scopes for the application."
          },
          "endpoints": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Allowed endpoints for the application."
          },
          "grantTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Allowed grant types for the application."
          },
          "responseTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Allowed response types for the application."
          },
          "postLogoutRedirectUris": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "Gets the post-logout redirect URIs associated with the application."
          },
          "redirectUris": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "Gets the redirect URIs associated with the application."
          },
          "requirements": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets the requirements associated with the application."
          }
        },
        "additionalProperties": false
      },
      "UserCreated": {
        "required": [
          "id",
          "email",
          "firstName",
          "lastName",
          "roles"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRole"
            }
          }
        },
        "additionalProperties": false
      },
      "UserDeleted": {
        "required": [
          "id",
          "email",
          "firstName",
          "lastName",
          "roles"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRole"
            }
          }
        },
        "additionalProperties": false
      },
      "UserRole": {
        "enum": [
          "user",
          "admin",
          "superAdmin"
        ],
        "type": "string"
      },
      "UserUpdated": {
        "required": [
          "id",
          "email",
          "firstName",
          "lastName",
          "roles"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRole"
            }
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Enter your token",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}