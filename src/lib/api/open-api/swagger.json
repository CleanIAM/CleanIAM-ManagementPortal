{
  "openapi": "3.0.1",
  "info": {
    "title": "CleanIAM",
    "description": "CleanIAM API",
    "version": "v1"
  },
  "paths": {
    "/api/applications": {
      "get": {
        "tags": [
          "ApplicationsApi"
        ],
        "summary": "Show the main application page with a list of all applications.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiApplicationModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiApplicationModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiApplicationModel"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApplicationsApi"
        ],
        "summary": "Create a new application",
        "requestBody": {
          "description": "New application data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewApplicationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewApplicationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewApplicationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OpenIdApplicationCreated"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenIdApplicationCreated"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenIdApplicationCreated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/applications/{id}": {
      "get": {
        "tags": [
          "ApplicationsApi"
        ],
        "summary": "Get the application with the given id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the application",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OpenIdApplication"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenIdApplication"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenIdApplication"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApplicationsApi"
        ],
        "summary": "Update the application with the given id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the application to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Data of the updated application",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateApplicationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateApplicationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateApplicationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OpenIdApplicationUpdated"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenIdApplicationUpdated"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenIdApplicationUpdated"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApplicationsApi"
        ],
        "summary": "Update the application with the given id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the application to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OpenIdApplicationDeleted"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenIdApplicationDeleted"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenIdApplicationDeleted"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/connect/authorize": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "The main endpoint for OAuth 2 authorization code flow.\r\nIf the user is not authenticated, the user will be redirected to the signin page.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/connect/endsession": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Show the view to confirm the consent of the user to sing out.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Endpoint handling the sign-out request.",
        "parameters": [
          {
            "name": "AccessToken",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AcrValues",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Assertion",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Audiences",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Claims.ValueKind",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/JsonValueKind"
            }
          },
          {
            "name": "ClaimsLocales",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ClientAssertion",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ClientAssertionType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ClientId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ClientSecret",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Code",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CodeChallenge",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CodeChallengeMethod",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CodeVerifier",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DeviceCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Display",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "GrantType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdentityProvider",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdToken",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdTokenHint",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LoginHint",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MaxAge",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Nonce",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Password",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PostLogoutRedirectUri",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Prompt",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RedirectUri",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RefreshToken",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RequestId",
            "in": "query",
            "schema": {
              "type": "string",
              "deprecated": true
            }
          },
          {
            "name": "RequestUri",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Resources",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ResponseMode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ResponseType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Scope",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "State",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Token",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TokenTypeHint",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Registration.ValueKind",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/JsonValueKind"
            }
          },
          {
            "name": "UiLocales",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UserCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Username",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FullLogout",
            "in": "query",
            "description": "Indicates if the user should be sign out also from the CleanIAM.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Parameters",
            "in": "query",
            "description": "Parameters to be passed to the end session endpoint.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StringStringValuesKeyValuePair"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/connect/endsession/success": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Show the view to confirm the consent of the user to sing out.\r\nJust a fallback in case the client application did not provide a redirect URI.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/connect/userinfo": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "The main endpoint for OpenId Connect userinfo requests.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "The main endpoint for OpenId Connect userinfo requests.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/email-verification": {
      "get": {
        "tags": [
          "EmailVerification"
        ],
        "summary": "Show a page announcing that email verification is required",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "EmailVerification"
        ],
        "summary": "Handle the user requesting email for email verification",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "RequestId": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              "encoding": {
                "RequestId": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/email-verification/{id}": {
      "get": {
        "tags": [
          "EmailVerification"
        ],
        "summary": "Handle the user clicking on the email verification link",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the verification request",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/error": {
      "get": {
        "tags": [
          "Error"
        ],
        "parameters": [
          {
            "name": "error",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "errorDescription",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/error/{errorCode}": {
      "get": {
        "tags": [
          "Error"
        ],
        "parameters": [
          {
            "name": "errorCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/external-providers/request/{provider}": {
      "get": {
        "tags": [
          "ExternalSigninProviders"
        ],
        "summary": "Initiates the authentication process with Microsoft provider",
        "parameters": [
          {
            "name": "request",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/external-providers/callback/{provider}": {
      "get": {
        "tags": [
          "ExternalSigninProviders"
        ],
        "summary": "Finalizes the authentication process with external signin provider",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/password-reset": {
      "get": {
        "tags": [
          "PasswordReset"
        ],
        "summary": "Show the form where the user fills in his email, and if the email is valid, a password reset request is sent.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "PasswordReset"
        ],
        "summary": "Handle the form submission with email for the password reset request.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Email"
                ],
                "type": "object",
                "properties": {
                  "Email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              },
              "encoding": {
                "Email": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/password-reset/{requestId}": {
      "get": {
        "tags": [
          "PasswordReset"
        ],
        "summary": "Show the form where the user can set a new password.",
        "description": "User is redirected to this page via a link in email",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "Id of the reset password request",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "PasswordReset"
        ],
        "summary": "Handle the form submission with new password for the password reset request.",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "ConfirmPassword",
                  "NewPassword",
                  "RequestId"
                ],
                "type": "object",
                "properties": {
                  "RequestId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "NewPassword": {
                    "type": "string"
                  },
                  "ConfirmPassword": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "RequestId": {
                  "style": "form"
                },
                "NewPassword": {
                  "style": "form"
                },
                "ConfirmPassword": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/scopes": {
      "get": {
        "tags": [
          "ScopesApiEndpoint"
        ],
        "summary": "Get the list of supported scopes.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemWithTooltip"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemWithTooltip"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemWithTooltip"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/signin": {
      "get": {
        "tags": [
          "Signin"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "error",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Signin"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Email",
                  "Password"
                ],
                "type": "object",
                "properties": {
                  "Email": {
                    "type": "string",
                    "format": "email"
                  },
                  "Password": {
                    "maxLength": 128,
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "Email": {
                  "style": "form"
                },
                "Password": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/signup": {
      "get": {
        "tags": [
          "Signup"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Signup"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Email",
                  "FirstName",
                  "LastName",
                  "Password"
                ],
                "type": "object",
                "properties": {
                  "Email": {
                    "type": "string",
                    "format": "email"
                  },
                  "FirstName": {
                    "minLength": 3,
                    "type": "string"
                  },
                  "LastName": {
                    "minLength": 3,
                    "type": "string"
                  },
                  "Password": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "Email": {
                  "style": "form"
                },
                "FirstName": {
                  "style": "form"
                },
                "LastName": {
                  "style": "form"
                },
                "Password": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/url-shortner/{id}": {
      "get": {
        "tags": [
          "UrlShortner"
        ],
        "summary": "The endpoint handling the shortened url access",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/mfa/enabled": {
      "put": {
        "tags": [
          "UserApiEndpoint"
        ],
        "summary": "Enable or disable MFA for the current user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMfaRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMfaRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMfaRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "UsersApi"
        ],
        "summary": "Get all users",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiUserModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiUserModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiUserModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UsersApi"
        ],
        "summary": "Create new user",
        "requestBody": {
          "description": "New user data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewUserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewUserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreated"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreated"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "UsersApi"
        ],
        "summary": "Get specific user by its id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the user to get",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiUserModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiUserModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiUserModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "UsersApi"
        ],
        "summary": "Update user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of user to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "FirstName",
            "in": "query",
            "description": "First name of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LastName",
            "in": "query",
            "description": "last name of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Roles",
            "in": "query",
            "description": "User roles",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UserRole"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserUpdated"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserUpdated"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserUpdated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UsersApi"
        ],
        "summary": "Delete user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of user to be deleted",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserDeleted"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDeleted"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDeleted"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}/disabled": {
      "put": {
        "tags": [
          "UsersApi"
        ],
        "summary": "Disable user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the use to disable",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserDisabled"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDisabled"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDisabled"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}/enabled": {
      "put": {
        "tags": [
          "UsersApi"
        ],
        "summary": "Enable user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the use to enable",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserDisabled"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDisabled"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDisabled"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiApplicationModel": {
        "required": [
          "id",
          "applicationType",
          "clientId",
          "clientType",
          "consentType",
          "displayName",
          "scopes",
          "postLogoutRedirectUris",
          "redirectUris"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the id associated with the application.",
            "format": "uuid"
          },
          "applicationType": {
            "$ref": "#/components/schemas/ApplicationType"
          },
          "clientId": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the client identifier associated with the application."
          },
          "clientType": {
            "$ref": "#/components/schemas/ClientType"
          },
          "consentType": {
            "$ref": "#/components/schemas/ConsentType"
          },
          "displayName": {
            "type": "string",
            "description": "Gets or sets the display name associated with the application.",
            "nullable": true
          },
          "scopes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Allowed scopes for the application."
          },
          "postLogoutRedirectUris": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "Gets the post-logout redirect URIs associated with the application."
          },
          "redirectUris": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "Gets the redirect URIs associated with the application."
          }
        },
        "additionalProperties": false
      },
      "ApiUserModel": {
        "required": [
          "id",
          "email",
          "emailVerified",
          "firstName",
          "lastName",
          "roles",
          "isDisabled",
          "isMFAEnabled"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the user",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "description": "Email of the user"
          },
          "emailVerified": {
            "type": "boolean",
            "description": "Indicates whether the user's email has been verified."
          },
          "firstName": {
            "type": "string",
            "description": "First name of the user"
          },
          "lastName": {
            "type": "string",
            "description": "last name of the user"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRole"
            },
            "description": "User roles"
          },
          "isDisabled": {
            "type": "boolean",
            "description": "Indicates whether the user account is disabled."
          },
          "isMFAEnabled": {
            "type": "boolean",
            "description": "Indicates whether the user has enabled multi-factor authentication (MFA)."
          }
        },
        "additionalProperties": false,
        "description": "Api user model"
      },
      "ApplicationType": {
        "enum": [
          "Native",
          "Web"
        ],
        "type": "string"
      },
      "ClientType": {
        "enum": [
          "Public",
          "Confidential"
        ],
        "type": "string"
      },
      "ConsentType": {
        "enum": [
          "Explicit",
          "External",
          "Implicit",
          "Systematic"
        ],
        "type": "string"
      },
      "CreateNewApplicationRequest": {
        "required": [
          "applicationType",
          "clientId",
          "clientType",
          "consentType",
          "displayName",
          "scopes",
          "postLogoutRedirectUris",
          "redirectUris"
        ],
        "type": "object",
        "properties": {
          "applicationType": {
            "$ref": "#/components/schemas/ApplicationType"
          },
          "clientId": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the client identifier associated with the application."
          },
          "clientType": {
            "$ref": "#/components/schemas/ClientType"
          },
          "consentType": {
            "$ref": "#/components/schemas/ConsentType"
          },
          "displayName": {
            "type": "string",
            "description": "Gets or sets the display name associated with the application.",
            "nullable": true
          },
          "scopes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Allowed scopes for the application."
          },
          "postLogoutRedirectUris": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "Gets the post-logout redirect URIs associated with the application."
          },
          "redirectUris": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "Gets the redirect URIs associated with the application."
          }
        },
        "additionalProperties": false
      },
      "CreateNewUserRequest": {
        "required": [
          "email",
          "firstName",
          "lastName",
          "roles"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email of the user"
          },
          "firstName": {
            "type": "string",
            "description": "First name of the user"
          },
          "lastName": {
            "type": "string",
            "description": "last name of the user"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRole"
            },
            "description": "User roles"
          }
        },
        "additionalProperties": false
      },
      "Error": {
        "required": [
          "message",
          "code"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ItemWithTooltip": {
        "required": [
          "value",
          "tooltip"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "tooltip": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "JsonValueKind": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "format": "int32"
      },
      "OpenIdApplication": {
        "required": [
          "id",
          "applicationType",
          "clientId",
          "clientType",
          "consentType",
          "displayName",
          "scopes",
          "postLogoutRedirectUris",
          "properties",
          "redirectUris"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the id associated with the application.",
            "format": "uuid"
          },
          "applicationType": {
            "$ref": "#/components/schemas/ApplicationType"
          },
          "clientId": {
            "type": "string",
            "description": "Gets or sets the client identifier associated with the application."
          },
          "clientType": {
            "$ref": "#/components/schemas/ClientType"
          },
          "consentType": {
            "$ref": "#/components/schemas/ConsentType"
          },
          "displayName": {
            "type": "string",
            "description": "Gets or sets the display name associated with the application.",
            "nullable": true
          },
          "scopes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Allowed scopes for the application."
          },
          "postLogoutRedirectUris": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "Gets the post-logout redirect URIs associated with the application."
          },
          "properties": {
            "type": "object",
            "additionalProperties": {},
            "description": "Gets the additional properties associated with the application."
          },
          "redirectUris": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "Gets the redirect URIs associated with the application."
          }
        },
        "additionalProperties": false
      },
      "OpenIdApplicationCreated": {
        "required": [
          "id",
          "applicationType",
          "clientId",
          "clientSecret",
          "clientType",
          "consentType",
          "displayName",
          "scopes",
          "postLogoutRedirectUris",
          "redirectUris"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "applicationType": {
            "$ref": "#/components/schemas/ApplicationType"
          },
          "clientId": {
            "type": "string"
          },
          "clientSecret": {
            "type": "string",
            "nullable": true
          },
          "clientType": {
            "$ref": "#/components/schemas/ClientType"
          },
          "consentType": {
            "$ref": "#/components/schemas/ConsentType"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "scopes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "postLogoutRedirectUris": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "redirectUris": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          }
        },
        "additionalProperties": false
      },
      "OpenIdApplicationDeleted": {
        "required": [
          "id",
          "displayName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "displayName": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "OpenIdApplicationUpdated": {
        "required": [
          "id",
          "applicationType",
          "clientId",
          "clientType",
          "consentType",
          "displayName",
          "scopes",
          "postLogoutRedirectUris",
          "redirectUris"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "applicationType": {
            "$ref": "#/components/schemas/ApplicationType"
          },
          "clientId": {
            "type": "string"
          },
          "clientType": {
            "$ref": "#/components/schemas/ClientType"
          },
          "consentType": {
            "$ref": "#/components/schemas/ConsentType"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "scopes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "postLogoutRedirectUris": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "redirectUris": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          }
        },
        "additionalProperties": false
      },
      "StringStringValuesKeyValuePair": {
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "UpdateApplicationRequest": {
        "required": [
          "id",
          "applicationType",
          "clientId",
          "clientType",
          "consentType",
          "displayName",
          "scopes",
          "postLogoutRedirectUris",
          "redirectUris"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the id associated with the application.",
            "format": "uuid"
          },
          "applicationType": {
            "$ref": "#/components/schemas/ApplicationType"
          },
          "clientId": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the client identifier associated with the application."
          },
          "clientType": {
            "$ref": "#/components/schemas/ClientType"
          },
          "consentType": {
            "$ref": "#/components/schemas/ConsentType"
          },
          "displayName": {
            "type": "string",
            "description": "Gets or sets the display name associated with the application.",
            "nullable": true
          },
          "scopes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Allowed scopes for the application."
          },
          "postLogoutRedirectUris": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "Gets the post-logout redirect URIs associated with the application."
          },
          "redirectUris": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "Gets the redirect URIs associated with the application."
          }
        },
        "additionalProperties": false
      },
      "UpdateMfaRequest": {
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Enable or disable MFA"
          }
        },
        "additionalProperties": false
      },
      "UserCreated": {
        "required": [
          "id",
          "email",
          "firstName",
          "lastName",
          "roles"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRole"
            }
          }
        },
        "additionalProperties": false
      },
      "UserDeleted": {
        "required": [
          "id",
          "email",
          "firstName",
          "lastName",
          "roles"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRole"
            }
          }
        },
        "additionalProperties": false
      },
      "UserDisabled": {
        "required": [
          "id",
          "email",
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the user",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "description": "Email address of the user"
          },
          "firstName": {
            "type": "string",
            "description": "First name of the user"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the user"
          }
        },
        "additionalProperties": false,
        "description": "Represents an event triggered when a user has been disabled within the system."
      },
      "UserRole": {
        "enum": [
          "User",
          "Admin",
          "SuperAdmin"
        ],
        "type": "string"
      },
      "UserUpdated": {
        "required": [
          "id",
          "email",
          "firstName",
          "lastName",
          "roles"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRole"
            }
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Enter your token",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}